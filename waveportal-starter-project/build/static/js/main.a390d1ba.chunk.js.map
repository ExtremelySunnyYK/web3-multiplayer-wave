{"version":3,"sources":["config.js","wave/wave.js","App.js","index.js"],"names":["contractAddress","contractABI","abi","Wave","props","wave","a","async","window","ethereum","provider","ethers","providers","Web3Provider","signer","getSigner","wavePortalContract","Contract","waveTxn","console","log","hash","wait","getTotalWaves","count","setState","totalWaves","toNumber","getWaves","state","currentAccount","className","onClick","this","React","Component","App","useState","setCurrentAccount","useEffect","request","method","params","chainId","accounts","length","account","code","rpcUrl","error","alert","checkIfWalletIsConnected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a390d1ba.chunk.js","sourcesContent":["import abi from \"./utils/abi/WavePortal.json\";\n\nconst contractAddress = \"0x6bAd0aDB5155013448c0B1AEA08D8891A266eBc3\";\nconst contractABI = abi.abi;\n\nexport { contractAddress, contractABI };\n","import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { contractAddress,contractABI } from \"../config\";\n\nimport \"../style/App.css\";\nimport \"../style/App.scss\";\n\nclass Wave extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentAccount: \"\",\n\t\t\ttotalWaves: 0,\n\t\t};\n\t\tthis.getWaves();\n\t}\n\t// const [totalWaves, setTotalWaves] = useState(0);\n\n\t wave = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (ethereum) {\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\t\tconst signer = provider.getSigner();\n\t\t\t\tconst wavePortalContract = new ethers.Contract(\n\t\t\t\t\tcontractAddress,\n\t\t\t\t\tcontractABI,\n\t\t\t\t\tsigner\n\t\t\t\t);\n\n\n\n\t\t\t\t/*\n\t\t\t\t * Execute the actual wave from your smart contract\n\t\t\t\t */\n\t\t\t\tconst waveTxn = await wavePortalContract.wave();\n\t\t\t\tconsole.log(\"Mining...\", waveTxn.hash);\n\n\t\t\t\tawait waveTxn.wait();\n\t\t\t\tconsole.log(\"Mined -- \", waveTxn.hash);\n\n\t\t\t\tlet count = await wavePortalContract.getTotalWaves();\n\t\t\t\tthis.setState({ totalWaves: count.toNumber() });\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Ethereum object doesn't exist!\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\t// setWaves = (val) => {\n\t// \tthis.setState({ totalWaves: val.currentTarget.value });\n\t// };\n\tgetWaves = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tconst provider = new ethers.providers.Web3Provider(ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst wavePortalContract = new ethers.Contract(\n\t\t\t\tcontractAddress,\n\t\t\t\tcontractABI,\n\t\t\t\tsigner\n\t\t\t);\n\n\t\t\tlet count = await wavePortalContract.getTotalWaves();\n\t\t\t// this.setWaves(count.toNumber());\n\t\t\tthis.setState({ totalWaves: count.toNumber() });\n\n\t\t\t// return count.toNumber();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"dataContainer\">\n\t\t\t\t<button className=\"waveButton\" onClick={this.wave}>\n\t\t\t\t\tWave at Me\n\t\t\t\t</button>\n\t\t\t\t<h1 className=\"header\">Total Waves</h1>\n\t\t\t\t<div className=\"count\">{this.state.totalWaves}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\t\n\n\n\n\nexport default Wave;","import React, { useEffect, useState } from \"react\";\n\nimport Wave from \"./wave/wave\";\n\nimport \"./style/App.css\";\nimport \"./style/App.scss\";\n\nconst App = () => {\n\n\tconst [currentAccount, setCurrentAccount] = useState(\"\");\n\n\n\tconst checkIfWalletIsConnected = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (!ethereum) {\n\t\t\t\tconsole.log(\"Make sure you have metamask!\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"We have the ethereum object\", ethereum);\n\t\t\t}\n\n\t\t\tawait window.ethereum.request({\n\t\t\t\tmethod: \"wallet_switchEthereumChain\",\n\t\t\t\tparams: [{ chainId: \"0x4\" }], // chainId must be in hexadecimal numbers\n\t\t\t});\n\n\t\t\tconst accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n\t\t\tif (accounts.length !== 0) {\n\t\t\t\tconst account = accounts[0];\n\t\t\t\tconsole.log(\"Found an authorized account:\", account);\n\t\t\t\tsetCurrentAccount(account);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"No authorized account found\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.code === 4902) {\n\t\t\t\ttry {\n\t\t\t\t\tawait window.ethereum.request({\n\t\t\t\t\tmethod: 'wallet_addEthereumChain',\n\t\t\t\t\tparams: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\tchainId: '0x4',\n\t\t\t\t\t\trpcUrl: 'https://data-seed-prebsc-1-s1.binance.org:8545/',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t} catch (addError) {\n\t\t\t\t\tconsole.error(addError);\n\t\t\t\t}\t\t\t\t}\n        // console.error(error);\n     \t else {\n      // if no window.ethereum then MetaMask is not installed\n      alert('MetaMask is not installed. Please consider installing it: https://metamask.io/download.html');\n    }\n} \t\t\n\n\t};\n\n\t/**\n\t * Implement your connectWallet method here\n\t */\n\tconst connectWallet = async () => {\n\t\ttry {\n\t\t\tconst { ethereum } = window;\n\n\t\t\tif (!ethereum) {\n\t\t\t\talert(\"Get MetaMask!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst accounts = await ethereum.request({\n\t\t\t\tmethod: \"eth_requestAccounts\",\n\t\t\t});\n\n\t\t\tconsole.log(\"Connected\", accounts[0]);\n\t\t\tsetCurrentAccount(accounts[0]);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\n\n\tuseEffect(() => {\n\t\tcheckIfWalletIsConnected();\n\n\t\t// async () => {\n\t\t// setTotalWaves(waveDisplay());\n\t\t// }\n\t}, []);\n\n\treturn (\n\t\t<div className=\"mainContainer\">\n\t\t\t<div className=\"dataContainer\">\n\t\t\t\t<div className=\"header\">ðŸ‘‹ Hey there!</div>\n\t\t\t\t<div className=\"bio\">\n\t\t\t\t\tI am Yong Kang and I am currently a student at SUTD! Connect your\n\t\t\t\t\tEthereum wallet and wave at me!\n\t\t\t\t</div>\n\n\n\t\t\t\t{/*\n\t\t\t\t * If there is no currentAccount render this button\n\t\t\t\t */}\n\t\t\t\t{!currentAccount && (\n\t\t\t\t\t<button className=\"waveButton\" onClick={connectWallet}>\n\t\t\t\t\t\tConnect Wallet\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t<Wave/>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}